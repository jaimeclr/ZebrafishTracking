# -*- coding: utf-8 -*-
"""Articulo_MetodoTracking.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W0nEn2nJrU4ZNDPT8IFgdZW9wo1K3Bn3
"""

from google.colab import drive
drive.mount('/content/drive')
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

scale_distance=52
scale_frames=30

def subfolderss(path):
  # Specify the path to the folder you want to list the subfolders of
  #folder_path = '/content/drive/MyDrive'
  folder_path = path
  # Use os.listdir() to get a list of all items (files and folders) in the specified directory
  all_items = os.listdir(folder_path)

  # Use a list comprehension to filter out only the subfolders (directories)
  subfolders = [item for item in all_items if os.path.isdir(os.path.join(folder_path, item))]

  # Now, the 'subfolders' list contains the names of all subfolders in the specified directory
  #print("Subfolders in the directory:", subfolders)
  return subfolders

patt='/content/drive/MyDrive/MCO/Jonathan/Experimento'
subs1=subfolderss(patt)
g_tratamiento=[]
g_muestra=[]
g_distance=[]
g_speed=[]
filess=['Tracks.csv','Spots.csv']
for i in subs1:
  sec_patt=patt+'/'+i
  #print(sec_patt)
  subs2=subfolderss(sec_patt)
  if len(subs2):
    #print(subs2)
    for j in subs2:
      thir_patt=sec_patt+'/'+j
      #print(thir_patt)
      for k in filess:
        if k==filess[0]:
          ruta=thir_patt+'/'+k
          df=pd.read_csv(ruta)
          #print('creado')
          g_tratamiento+=[i]
          g_muestra+=[j]
          aa=list(df.TOTAL_DISTANCE_TRAVELED)
          bb=float(aa[-1])/scale_distance
          g_distance+=[bb]
          aa=list(df.TRACK_MEAN_SPEED)
          bb=float(aa[-1])/scale_frames
          g_speed+=[bb]
        else:
          ruta=thir_patt+'/'+k
          df0=pd.read_csv(ruta)
          frames=list(df0.FRAME)
          posX=list(df0.POSITION_X)
          posY=list(df0.POSITION_Y)
          reducido={'FRAME':frames[3:],'POSITION_X':posX[3:],'POSITION_Y':posY[3:]}
          df=pd.DataFrame(reducido)
          df['FRAME'] = df['FRAME'].astype(float)
          df['POSITION_X'] = df['POSITION_X'].astype(float)/scale_distance
          df['POSITION_Y'] = df['POSITION_Y'].astype(float)/scale_distance
          df['NORM_POS_X'] =df['POSITION_X']-df['POSITION_X'][0]
          df['NORM_POS_Y'] =df['POSITION_Y']-df['POSITION_Y'][0]
          f, ax = plt.subplots(figsize=(5, 5))
          plt.plot(df.NORM_POS_X,df.NORM_POS_Y)
          #plt.plot(df['NORM_POS_X'][-1],df['NORM_POS_Y'][-1],'*g')
          plt.plot(df['NORM_POS_X'][0],df['NORM_POS_Y'][0],'or')
          plt.ylim(-14,14)
          plt.xlim(-14,14)
          #plt.show()
          plt.savefig(thir_patt+'/tracking.png',dpi=300)
          plt.clf()
          #df=df.sort_values(by='FRAMES')
guardado={'Tratamiento':g_tratamiento,'Muestra':g_muestra,'Total_distance':g_distance,'Speed':g_speed}
df=pd.DataFrame(guardado)
graficos=['Total_distance','Speed']
df.to_csv(patt+'/data.csv', index=False)
for i in graficos:
  sns.boxplot(df, x="Tratamiento", y=i)
  # Add in points to show each observation
  sns.stripplot(df, x="Tratamiento", y=i, size=4, color=".3")
  plt.savefig(patt+'/'+i+'.png')
  plt.clf()

40*15